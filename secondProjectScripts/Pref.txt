using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using UnityEngine;

public class Pref : MonoBehaviour
{
    public GameObject Prefab;
    private Transform _transform;
    public float Lifetime;
    public float Swelling;
    public float Speed;
    private float Difference;
    private float _rotate_X;
    private float _rotate_Y;
    private float _rotate_Z;
    private float ThrustRandomizer;
    public GameObject _pers;
    public float Thrust;
    private Rigidbody _rigidbody;
    private SpaceshipController _spaceshipController;
    void Start()
    {
        _spaceshipController = _pers.GetComponent<SpaceshipController>();
        _rigidbody = GetComponent<Rigidbody>();
        _transform = GetComponent<Transform>();
        Destroy(Prefab, Lifetime);
        _rotate_X = UnityEngine.Random.Range(-1.0f, 1.0f) * 360;
        _rotate_Y = UnityEngine.Random.Range(-1.0f, 1.0f) * 360;
        _rotate_Z = UnityEngine.Random.Range(-1.0f, 1.0f) * 360;
        ThrustRandomizer = UnityEngine.Random.Range(-1.0f, 1.0f);
    }
    private void FixedUpdate()
    {
        if (!_spaceshipController.DeathOn)
        {
            _transform.localScale = new Vector3(_transform.localScale.x + Swelling, _transform.localScale.y + Swelling, _transform.localScale.z + Swelling);
            _transform.position = new Vector3(_transform.position.x, _transform.position.y, _transform.position.z - Speed);
            _transform.Rotate(new Vector3(_rotate_X, _rotate_Y, _rotate_Z) * Time.deltaTime / 4);
            _rigidbody.AddForce(_rotate_Z * ThrustRandomizer / Thrust, _rotate_Y * ThrustRandomizer / Thrust, _rotate_X * ThrustRandomizer / Thrust, ForceMode.Impulse);
        }
    }
}
